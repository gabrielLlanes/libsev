/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'c'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/org.jctools/jctools-core
    implementation libs.jctools.core
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

model {
    platforms {
        x64 { 
            architecture "x86_64" 
        }
    }
    components {
        sevloop(NativeLibrarySpec) {
            targetPlatform "x64"
            binaries {
                all {
                    cCompiler.args '-I', "${System.getenv('JAVA_HOME')}/include"
                    cCompiler.args '-I', "${System.getenv('JAVA_HOME')}/include/linux"
                    linker.args "-luring"
                }
            }
            sources {
                c {
                    source {
                        srcDir "src/main/c"
                        include "**/*.c"
                    }
                }
            }
        }
    }
}

test {
    systemProperty "java.library.path", file("${buildDir}/libs/sevloop/shared").absolutePath
    maxParallelForks = 1
}

def testArgs = ["--enable-native-access=ALL-UNNAMED"]
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    jvmArgs += testArgs
    useJUnitPlatform()
}

build.dependsOn("sevloopSharedLibrary")
test.dependsOn("sevloopSharedLibrary")